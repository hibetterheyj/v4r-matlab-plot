%% Reference 参考：
% 1. matlab - scatter
% https://ww2.mathworks.cn/help/matlab/ref/scatter.html
% 2. matlab - semilogx
% https://ww2.mathworks.cn/help/matlab/ref/semilogx.html
% 3. matlab - LineSpec
% https://ww2.mathworks.cn/help/matlab/ref/linespec.html
% 4. matlab - Create String Arrays
% https://ww2.mathworks.cn/help/matlab/matlab_prog/create-string-arrays.html?lang=en

%% Mainbody 正文
% 添加tightfig
addpath('../');
clc;clear;close all;

saveFileName = 'complexityPlot';
saveFileType = 'pdf'; % pdf/png

plotDrawStyle = {struct('color',[1,0,0],'style','-'),...
    struct('color',[1,0,0],'style','--'),...
    struct('color',[0,1,0],'style',':'),...
    struct('color',[0,0,1],'style','-.'),...
    struct('color',[0,0,0],'style','-'),...
    struct('color',[1,0,1],'style','--'),...
    struct('color',[0,1,1],'style',':'),...
    struct('color',[0.5,0.5,0.5],'style','-.'),...
    struct('color',[136,0,21]/255,'style','-'),...
    struct('color',[255,127,39]/255,'style','--'),...
    struct('color',[0,162,232]/255,'style',':'),...
    struct('color',[163,73,164]/255,'style','-.'),...
    struct('color',[12,73,123]/255,'style','-'),...
    struct('color',[0,0,0]/255,'style','--'),...
    struct('color',[236 186 53]/255,'style',':'),...
    struct('color',[0,162,232]/255,'style','-.'),...
    struct('color',[0,128,128]/255,'style','-'),...
    struct('color',[255,140,0]/255,'style','--'),...
    struct('color',[12,73,123]/255,'style',':'),...
    struct('color',[0,128,128]/255,'style','-.'),...
    struct('color',[255,0,255]/255,'style','-'),...
    struct('color',[0,0,139]/255,'style','--'),...
    struct('color',[236 186 53]/255,'style',':'),...
    struct('color',[128,0,128]/255,'style','-.'),...
    struct('color',[225,20,147]/255,'style','-'),...
    struct('color',[180,20,30]/255,'style','--'),...
    struct('color',[0 1 1],'style',':'),...
    struct('color',[1 0 1],'style','-.'),...
    struct('color',[1 0 1],'style','-'),...
    struct('color',[1 0 1],'style','--'),...
    struct('color',[0,128,128]/255,'style',':'),...
    struct('color',[0,128,128]/255,'style','-.'),...
    struct('color',[0,128,128]/255,'style','-'),...
    };

% overall
fxSet = ...
   {struct('complexity',@(x) x^x, 'name', 'N^N'),...
    struct('complexity',@(x) factorial(x), 'name', 'N!'),...
    struct('complexity',@(x) (x/exp(1))^x, 'name', '(N/e)^N'),...
    struct('complexity',@(x) 3^x, 'name', '3^N'),...
    struct('complexity',@(x) sqrt(4^x), 'name', '2^{N}'),...
    struct('complexity',@(x) (log(x))^log(x), 'name', '{log N}^{log N}'),...
    struct('complexity',@(x) x^2, 'name', 'N^2'),...
    struct('complexity',@(x) 20*x, 'name', '20N'),...
    struct('complexity',@(x) sqrt(x), 'name', 'N^{1/2}'),...
    struct('complexity',@(x) log(x)^2, 'name', '{log}^2 {N}'),...
    struct('complexity',@(x) log(x), 'name', '{log} N'),...
    };
% small set
% fxSet = ...
%    {struct('complexity',@(x) (log(x))^log(x), 'name', '{log N}^{log N}'),...
%     struct('complexity',@(x) x^2, 'name', 'N^2'),...
%     struct('complexity',@(x) 20*x, 'name', '20N'),...
%     struct('complexity',@(x) sqrt(x), 'name', 'N^{1/2}'),...
%     struct('complexity',@(x) log(x)^2, 'name', '{log}^2 {N}'),...
%     struct('complexity',@(x) log(x), 'name', '{log} N'),...
%     };

xRange = [1:5:50];
resultMat = zeros(length(fxSet), length(xRange));
tmpName=cell(length(fxSet),1);
for i = 1:length(fxSet)
    fx = fxSet{i}.complexity;
    for j = 1:length(xRange)
        resultMat(i,j) = fx(xRange(j));
    end
    tmpName{i} = fxSet{i}.name;
end

% 图窗
figureStar = figure(40);

for ii = 1:length(fxSet)
    plot(xRange,log10(resultMat(ii,:)), 'Color',plotDrawStyle{ii}.color,...
        'LineStyle', plotDrawStyle{ii}.style,'LineWidth', 3);
    hold on;
end

fontSize = 18;
legendFont = 16;
set(gcf, 'position', [0 0 1200 400]);

set(gca,'Xgrid','on'); % 出现竖线
set(gca,'Ygrid','on'); % 出现横线
box on;

xLabelName = 'Input Size';
yLabelName = 'Complexity';

axis([0.9 max(xRange) 0 log10(max(max(resultMat)))]);

% Times 字体
xlabel(xLabelName,'fontsize',fontSize,'fontname','Times New Roman','fontweight','bold'); % 纵轴名称
set(gca,'FontName','Times New Roman','fontSize',fontSize-4); % 设置坐标轴值字体
% 默认无衬线字体
% ylabel(yLabelName1,'fontsize',fontSize,'fontweight','bold'); % 纵轴名称
% set(gca,'fontSize',fontSize); % 设置坐标轴值字体

% Times 字体
ylabel(yLabelName,'fontsize',fontSize,'fontname','Times New Roman','fontweight','bold'); % 纵轴名称
set(gca,'FontName','Times New Roman','fontSize',fontSize-4); % 设置坐标轴值字体
% 默认无衬线字体
% ylabel(yLabelName1,'fontsize',fontSize,'fontweight','bold'); % 纵轴名称
% set(gca,'fontSize',fontSize); % 设置坐标轴值字体

% set(gca, 'XScale', 'log')

% 矫正 xtick
% 矫正 ytick
% set(gca,'ytick',(0.28:0.02:0.46))
% set(gca,'ytickLabel',num2str(get(gca,'yTick')','%.2f'))
yMax = ceil(log10(max(max(resultMat))));
% set(gca,'ytick',[log10(1),log10(10),log10(100),log10(1000),log10(10000)]);
% set(gca,'yticklabel',{'0.5','1','10','30','100','1000'});
step = 5;yRange=[0:step:yMax];
set(gca,'ytick',yRange);
% set(gca,'yticklabel',cellstr(string(power(10,yRange))));
set(gca,'yticklabel',cellstr('10^{'+string(yRange)+'}'));
title('Complexity VS Input Size','fontsize',fontSize,'fontname','Times New Roman','fontweight','bold');


% legend('off')
% legend1=legend(tmpName,'Interpreter', 'latex');
legend1=legend(tmpName,'Interpreter', 'tex','fontsize',legendFont, 'location', 'southeastoutside');
set(legend1, 'Fontname', 'Times New Roman','FontWeight','normal');

tightfig;

% 输出保存
switch saveFileType
    case 'pdf'
        saveas(gcf,[saveFileName '.pdf']); % pdf
    case 'png'
        saveas(gcf,saveFileName,'png'); % png
    otherwise
        disp('Type error !')
end